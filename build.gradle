plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi "com.terraformersmc:modmenu:11.0.3"
	implementation "com.google.code.gson:gson:2.9.0"

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

	include(implementation 'javax.websocket:javax.websocket-api:1.1')
	include(implementation 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.17') // Tyrus dependency

	modImplementation include("io.github.cottonmc:LibGui:${project.libgui_version}")
}

test {
	useJUnitPlatform()
}

processResources {
	inputs.property "version", project.version
	def fileProps = new Properties()
	file('gradle.properties').withInputStream { stream ->
		fileProps.load(stream)
	}
	inputs.property "file_version", fileProps['file_version']

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
	filesMatching("assets/modforlazypeople/mflp/settings.mflp") {
		expand "version": project.version, "file_version": fileProps['file_version']
	}

}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}